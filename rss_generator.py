#!/usr/bin/env python3

class RssGenerator:
    def __init__(self):
        pass

    @staticmethod
    def format_timestamp(t):
        DoW = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
        result = DoW[int(t.strftime('%w'))]
        result += ', '
        result += t.strftime('%d %b %Y %H:%M:%S')
        result += ' +0000'
        return result

    @staticmethod
    def generate(options, file_list, cover_image):
        result = ''
        title = 'Media files from {0}'.format(options.bucket_name)
        itunes_image = ''
        enclosure_image = ''
        if cover_image is not None:
            itunes_image = '<itunes:image href="{base}{image}" />'.format(base=options.base_url, image=cover_image)
            enclosure_image = '<enclosure url="{base}{image}" type="image/jpeg"></enclosure>'.format(base=options.base_url, image=cover_image)
        result += """<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podaccess="https://access.acast.com/schema/1.0/" version="2.0">
<channel>
<title>{title}</title>
<link>{link}</link>
{itunesimage}
{blockitunes}
<language>en-us</language>
<description>RSS feed auto-generated by s3cast: https://github.com/BrianEnigma/s3cast</description>""".format(
            title=title,
            link=options.base_url,
            itunesimage=itunes_image,
            blockitunes=('<itunes:block>yes</itunes:block>' if options.private else ''),)
        for f in file_list:
            result += """<item>
    <title>{filename}</title>
    <description>{filename}</description>
    {blockitunes}
    <link>{link}</link>
    <enclosure url="{media_link}" type="audio/mpeg" length="{size}"></enclosure>
    {enclosure_image}
    <pubDate>{pubdate}</pubDate>
    <guid>{filename}</guid>
    {premium}
</item> 
""".format(
                filename=f.filename,
                blockitunes=('<itunes:block>yes</itunes:block>' if options.private else ''),
                link=options.base_url,
                media_link=options.base_url + f.filename,
                enclosure_image=enclosure_image,
                pubdate=RssGenerator.format_timestamp(f.modified),
                size=f.size,
                premium=('<podaccess:premium locked="true"/>' if options.private else '')
            )

        result += '</channel></rss>'
        return result

    @staticmethod
    def generate_m3u8(options, file_list, cover_image):
        result = ''
        title = 'Media files from {0}'.format(options.bucket_name)
        #result += "#EXTM3U\n"
        result += "#EXT-X-PLAYLIST-TYPE:VOD\n"
        if cover_image is not None:
            result += "#EXTIMG:{base}{image}\n".format(base=options.base_url, image=cover_image)
        result += "#PLAYLIST:{title}\n".format(title=title)
        for f in file_list:
            result += "#EXTALB:{title}\n".format(title=f.filename)
            result += "{media_link}\n".format(media_link=options.base_url + f.filename)
        return result

    @staticmethod
    def generate_player(options, file_list, cover_image):
        result = ''
        title = 'Media files from {0}'.format(options.bucket_name)
        poster = ''
        if cover_image is not None:
            poster = 'poster="{base}{image}"'.format(base=options.base_url, image=cover_image)
        result += """<!DOCTYPE html>
            <html>
            <head>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
                <link href="https://vjs.zencdn.net/7.18.1/video-js.css" rel="stylesheet" />
                <title>{title}</title>
            </head>
            <body>
                <video
                    id="my-video"
                    class="video-js"
                    controls="true"
                    preload="auto"
                    autoplay="true"
                    aspectRatio="1:1"
                    fluid="true"
                    responsive="true"
                    audioOnlyMode="true"
                    audioPosterMode="true"
                    width="100%"
                    {poster}
                    data-setup="{{}}"
                  >
                    <source src="{baseurl}index.m3u8" type="video/mp4" />
                    <p class="vjs-no-js">
                      To view this video please enable JavaScript, and consider upgrading to a
                      web browser that
                      <a href="https://videojs.com/html5-video-support/" target="_blank"
                        >supports HTML5 video</a
                      >
                    </p>
                  </video>
                  <ul>
            """.format(
                title=title,
                poster=poster,
                baseurl=options.base_url
            )
        for f in file_list:
            result += "<li><a href=\"{media_link}\">{filename}</a></li>\n".format(media_link=options.base_url + f.filename, filename=f.filename)
        result += """</ul>
            <script src="https://vjs.zencdn.net/7.18.1/video.min.js"></script>
            </body>
            </html>"""
        return result
